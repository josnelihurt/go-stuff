// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package prot is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	DataHarvestServiceRequest
	DataHarvestServiceResponse
*/
package prot

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataHarvestServiceRequest struct {
}

func (m *DataHarvestServiceRequest) Reset()                    { *m = DataHarvestServiceRequest{} }
func (m *DataHarvestServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*DataHarvestServiceRequest) ProtoMessage()               {}
func (*DataHarvestServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DataHarvestServiceResponse struct {
	Status bool `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`
}

func (m *DataHarvestServiceResponse) Reset()                    { *m = DataHarvestServiceResponse{} }
func (m *DataHarvestServiceResponse) String() string            { return proto.CompactTextString(m) }
func (*DataHarvestServiceResponse) ProtoMessage()               {}
func (*DataHarvestServiceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DataHarvestServiceResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*DataHarvestServiceRequest)(nil), "trasport.DataHarvestServiceRequest")
	proto.RegisterType((*DataHarvestServiceResponse)(nil), "trasport.DataHarvestServiceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataHarvestService service

type DataHarvestServiceClient interface {
	Status(ctx context.Context, in *DataHarvestServiceRequest, opts ...grpc.CallOption) (*DataHarvestServiceResponse, error)
}

type dataHarvestServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataHarvestServiceClient(cc *grpc.ClientConn) DataHarvestServiceClient {
	return &dataHarvestServiceClient{cc}
}

func (c *dataHarvestServiceClient) Status(ctx context.Context, in *DataHarvestServiceRequest, opts ...grpc.CallOption) (*DataHarvestServiceResponse, error) {
	out := new(DataHarvestServiceResponse)
	err := grpc.Invoke(ctx, "/trasport.DataHarvestService/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataHarvestService service

type DataHarvestServiceServer interface {
	Status(context.Context, *DataHarvestServiceRequest) (*DataHarvestServiceResponse, error)
}

func RegisterDataHarvestServiceServer(s *grpc.Server, srv DataHarvestServiceServer) {
	s.RegisterService(&_DataHarvestService_serviceDesc, srv)
}

func _DataHarvestService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataHarvestServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataHarvestServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trasport.DataHarvestService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataHarvestServiceServer).Status(ctx, req.(*DataHarvestServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataHarvestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trasport.DataHarvestService",
	HandlerType: (*DataHarvestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _DataHarvestService_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x28, 0x29, 0x4a, 0x2c, 0x2e,
	0xc8, 0x2f, 0x2a, 0x51, 0x92, 0xe6, 0x92, 0x74, 0x49, 0x2c, 0x49, 0xf4, 0x48, 0x2c, 0x2a, 0x4b,
	0x2d, 0x2e, 0x09, 0x86, 0xa8, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x32, 0xe1, 0x92,
	0xc2, 0x26, 0x59, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc6, 0xc5, 0x16, 0x5c, 0x92, 0x58,
	0x52, 0x5a, 0x2c, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x11, 0x04, 0xe5, 0x19, 0x65, 0x72, 0x09, 0x61,
	0xea, 0x12, 0x0a, 0x86, 0xa9, 0x16, 0x52, 0xd6, 0x83, 0xd9, 0xae, 0x87, 0xd3, 0x6a, 0x29, 0x15,
	0xfc, 0x8a, 0x20, 0x4e, 0x70, 0x62, 0x8b, 0x62, 0x01, 0x79, 0x28, 0x89, 0x0d, 0xec, 0x2d, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xbd, 0xc8, 0xf1, 0xe7, 0x00, 0x00, 0x00,
}
